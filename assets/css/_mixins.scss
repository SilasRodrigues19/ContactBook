@mixin flexCenterOptionallyCol($flexDirection: row, $align-items: center) {
    display: flex;
    justify-content: center;
    align-items: $align-items;
    flex-direction: $flexDirection;
}

@mixin flexCencerJustify($justify-content: center) {
    display: flex;
    justify-content: $justify-content;
    align-items: center;
}

@mixin justify($justify-content) {
    display: flex;
    justify-content: $justify-content;
}

@mixin min-h-full {
    min-height: 100vh;
    height: 100%;
}

@mixin backgroundBefore($position, $opacity, $background) {
    content: "";
    position: $position;
    opacity: $opacity;
    background: $background;
    width: 100%;
    height: 100%;
    z-index: -1;
    left: 0;
    top: 0;
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }
}

@mixin broswerPrefix($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}

//@include broswerPrefix(transform, scale3d(2.5, 2, 1.5));

@mixin fontFace($name, $file) {
    @font-face {
        font-family: "#{$name}";
        src: url("../fonts/#{$file}.eot");
        src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
        url("../fonts/#{$file}.woff") format("woff"),
        url("../fonts/#{$file}.ttf") format("truetype"),
        url("../fonts/#{$file}.svg?#webfont") format("svg");
    }
}

//@include fontFace("My Font", fontFormat);